#cloud-config

# Validation:
# https://coreos.com/validate/

# Scripts:
# https://github.com/coreos/scripts/tree/master/contrib
# https://coreos.com/os/docs/latest/config-drive.html
# https://github.com/coreos/coreos-cloudinit/blob/master/Documentation/cloud-config.md

# create-basic-configdrive:
# $ cd /c/www/virtualbox/coreos/scripts && ./create-basic-configdrive.sh -H core-1 -n core-1 -S /c/msys64/home/Lanti/.ssh/id_rsa.pub -t aea80a5c97f0bc42ee20569a71177261 -p /c/www/virtualbox/coreos/scripts
# Extracting configdrive:
# cd /c/www/virtualbox/coreos/scripts && 7z x -oextracted_core1 core-1.iso
# Verifying:
# $ cat /media/configdrive/openstack/latest/user_data
# $ fleetctl list-machines --full=true
# $ journalctl -u etcd2 -b
# $ systemctl -l status etcd && systemctl -l status etcd2
# $ systemctl status -l etcd2
# $ sudo systemctl cat etcd2
# $ ss -lnt
# $ journalctl --unit etcd2.service --no-pager

# mkisofs usage:
# $ cd /c/www/virtualbox/coreos/scripts && mkisofs -R -V config-2 -o configdrive.iso /c/www/virtualbox/coreos/scripts/new-drive

# create-coreos-vdi:
# $ id -G | grep -qE '\<(544|0)\>' && echo admin || echo user && cd /c/www/virtualbox/coreos-20151204/scripts && ./create-coreos-vdi.sh -d /c/www/virtualbox/coreos-20151204/vdi -V alpha

# Creating Vbox VDI from Bin:
# $ VBoxManage convertfromraw --format VDI C:\www\virtualbox\coreos-20151204\vdi\coreos_production_image.bin C:\www\virtualbox\coreos-20151204\vdi\coreos_production_891.0.0.vdi
# $ VBoxManage modifyhd D:\VM\coreos-1\coreos_production_891.0.0.vdi --resize 20480
# $ VBoxManage clonehd D:\VM\coreos-1\coreos_production_891.0.0.vdi D:\VM\coreos-1\coreos_production_891.0.0-fixed.vdi --variant Fixed

# https://futurestud.io/blog/coreos-how-to-set-up-a-cluster
# $private_ipv4 and $public_ipv4 variables are substitution variables which will be replaced by vagrant with the actual machine specific values.
# The substitution variables are only supported on DigitalOcean, Amazon EC2, Google Compute Engine, OpenStack, Rackspace, and Vagrant.

coreos:
  etcd2:
    #generate a new token for each unique cluster from https://discovery.etcd.io/new or https://discovery.etcd.io/new?size=3
    # https://discovery.etcd.io/new?size=1
    discovery: https://discovery.etcd.io/9e1c36964e80ddcc10c3fdbd5fde8912
    # multi-region and multi-cloud deployments need to use $public_ipv4
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
  fleet:
    public-ip: $public_ipv4 # used for fleetctl ssh command
    #metadata: region=lon1
  flannel:
    interface: $public_ipv4
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: flanneld.service
      drop-ins:
      - name: 50-network-config.conf
        content: |
          [Service]
          ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.1.0.0/16" }'
      command: start
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
ssh_authorized_keys:
  - ssh-rsa AAAAB3...
hostname: core-1
write_files:
  - path: /etc/ssh/sshd_config
    permissions: 0600
    owner: root:root
    content: |
      # Use most defaults for sshd configuration.
      UsePrivilegeSeparation sandbox
      Subsystem sftp internal-sftp

      PermitRootLogin no
      AllowUsers core
      PasswordAuthentication no
      ChallengeResponseAuthentication no
# This is helpful when the host does not have DNS infrastructure in place to resolve its own hostname, for example, when using Vagrant.
#manage_etc_hosts: localhost
